# Alex - 42 - Libft : Ta propre bibliothèque à toi tout seul

# Fonction : memset
#include <string.h>
void *memset(void *s, int c, size_t n);

# Fonction : bzero
# Description : The bzero() function fills the first n bytes of the object pointed to by dst with zero (NUL) bytes.
#include <strings.h>
void bzero( void *dst, size_t n );

# Fonction : memcpy
#include <string.h>
void *memcpy(void * restrict s1, 
const void * restrict s2,
size_t n);

# Fonction : memcopy
# Description : memcpy() is used to copy a block of memory from one location to another. It is declared in <string.h> header file.
#include <string.h>
void *memcpy(void *s1, const void *s2, size_t n);

# Fonction : memmove
 #include <string.h>
void *memmove(void *s1, const void *s2, size_t n);

# Fonction : memchr
#include <string.h>
void *memchr(const void *s, int c, size_t n);

# Fonction : memcmp
#include <string.h>
int memcmp(const void *s1, const void *s2, size_t n);

# Fonction : strlen
#include <string.h>
size_t strlen(const char *s);

# Fonction : strdup
# Description : The function strdup() is used to duplicate a string. It returns a pointer to null-terminated byte string.
#include <string.h>
char * strdup( const char * source );

# Fonction : strcpy
 #include <string.h>
char *strcpy(char * restrict s1,
const char * restrict s2);

# Fonction : strncpy
#include <string.h>
char *strncpy(char * restrict s1,
const char * restrict s2,
size_t n);

# Fonction : strcat
# Description : The C library function char *strcat(char *dest, const char *src) appends the string pointed to by src to the end of the string pointed to by dest.
#include <string.h>
char *strcat(char *dest, const char *src)

# Fonction : strchr
#include <string.h>
char *strchr(const char *s, int c);

# Fonction : strrchr
#include <string.h>
char *strrchr(const char *s, int c);

# Fonction : strstr
#include <string.h>
char *strstr(const char *s1, const char *s2);

# Fonction : strnstr
# Description : The strnstr function locates the first occurrence of the null-terminated string \c little in the string \c big, where not more than \c len characters are searched. Characters that appear after a \0 character are not searched
#include <string.h>
char 	strnstr (const char *big, const char *little, size_t len)


# Fonction : strcmp
#include <string.h>
int strcmp(const char *s1, const char *s2);

# Fonction : strncmp
#include <string.h>
int strncmp(const char *s1, const char *s2, size_t n);

# Fonction : atoi,atol,atoll
#include <stdlib.h>
int atoi(const char *nptr);
long int atol(const char *nptr);
long long int atoll(const char *nptr);

# Fonction : isalpha
#include <ctype.h>
int isalpha(int c);

# Fonction : isalnum
#include <ctype.h>
int isdigit(int c);

# Fonction : isascii
# Description : The isascii() function tests if a given character, in the current locale, can be represented as a valid 7–bit US-ASCII character.
#include <ctype.h>
int isascii(int c);

# Fonction : isprint
#include <ctype.h>
int isprint(int c);

# Fonction : toupper
#include <ctype.h>
int toupper(int c);

# Fonction : tolower
#include <ctype.h>
int tolower(int c);

